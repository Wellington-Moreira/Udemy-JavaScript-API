Anotações Aula JavaScript Udemy!

	SECTION 2
-> Para fazer a comunicação entre front-end e back-end, ou comunicação entre dois back-ends, temos as 3 principais protocolos: SOAP (Simple Object Access Protocol), REST (Representational State Transfer), GraphQl.

	->SOAP: protocolo baseado em XML, muito antigo, presente em sistemas legado.
	-> REST: Estilo arquitetural amplamente utilizado para a criação de APIs web. REST utiliza os métodos HTTP, GET POST PUT DELETE PATCH, para permitir a comunicação entre back e frint-end.
	-> GraphQL: linguagem de consulta para APIs, permite que os clientes solicitem exatamente os dados que precisam e nada mais.


	SECTION 3
-> Atalhos VSCode:
- Fechar todas as pastas na árvore de projetos = "botão de colapse na barra de criar novo arquivo"
- tirar TAB em massa = selecionar texto + shift + TAB
- identificar onde está a chave/colchetes que abre/fecha um outro determinado = ctrl + shift + ]
- pesquisar um arquivo digitando o nome = ctrl + p
- ir pra uma linha específica na página = ctrl + g + "numero da linha"
- renomear a mesma variável em vários locais ao mesmo tempo = seleciona + f2
- abrir terminal = ctrl + '
- abrir um NOVO terminal = ctrl + shift + '
- formatar documento = shift + alt + f
- abrir navegação entre abas já abertas = ctrl + tab
- escrever em várias linhas ao mesmo tempo = alt + click nas linhas
- comentar varias linhas = ctrl + ;
- duplicar linha selecionada = shift + alt + seta pra cima ou baixo
- arrastar linha selecionada = alt + seta pra cima ou baixo




	SECTION EXTRA Git & GitHub

feat: Algo relacionado com features que você adicionar;
fix: Algo para corrigir;
docs: Algo relacionado a documentações, README e afins;
style: Algo relacionado com estilização;
refactor: Algo relacionado com refatoração (refazer);
perf: Algo relacionado a performance;
test: Algo com testes;
chore: Algo para coisas relacionados a build, configs e afins.

COMANDOS GIT
ctrl + L OU clear: limpa o terminal do gitbash
code .: abre o vs code na pasta selecionada
cd "nome da pasta": entra em uma pasta criada
mkdir "nome da pasta": cria uma pasta
git init: inicia o git na pasta que está
git status: mostra o status da branch atual, se tem arquivos alterados ou não
git add <"filename ou .">: adiciona os arquivos selecionados ou todos para ser comittados
git restore --staged <filename ou .>:remove os arquivos selecionados ou todos para não ser comittados
git branch <branchname>: cria uma nova branch
git checkout <branchname>: troca de branch
git checkout -b <branchname>: cria uma nova branch e já troca
git commit -m "<description>": faz o commit com a mensagem
git merge <branchname>: mescla as branches
git branch -D <branchname>: deleta a branch criada
git clone "link": faz download do repositório no GitHub pro local, por https




	SECTION 4

	-> Variáveis em JS:
- var = possível alterar o valor
- let = possível alterar o valor
- const = valor constante


	SECTION 6

	-> Métodos de array
- push = coloca um elemento na última posição do array
- unshift = coloca um elemento na primeira posição do array
- pop = remove o ultimo elemento do array
- shift = remove o primeiro elemento do array
- slice (inicial, final) = retorna o array dividido no range especificado
- splice (a partir desse índice, apaga esse numero de elementos(ou até o final se não especificar)) = retorna o array até 1 elemento antes do indicado
- forEach (variável => {
	função a ser executada  = itera em todos os elementos a função descrita
}







